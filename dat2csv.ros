#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(cl-csv clingon) :silent t)
  )

(defpackage :ros.script.dat.3913987728
  (:use :cl))
(in-package :ros.script.dat.3913987728)


(defparameter *separator* #\)
(defparameter *quote* #\Ã¾)

(defun convert-concordance-to-csv (filename)  
  (cl-csv:write-csv 
   (with-open-file (s filename)
     (cl-csv:read-csv s 
                      :separator *separator*
                      :quote *quote*))
   :stream *standard-output*))

(defun cli/options ()
  "Returns a list of options for our main command"
  (list
   (clingon:make-option
    :flag
    :description "help"
    :short-name #\h
    :key :help)   
   ))

(defun cli/handler (cmd)
  "The top-level handler"
  (let ((args      (clingon:command-arguments cmd))
        (help      (clingon:getopt cmd :help)))
    (cond ((or (null args) help)
           (clingon:print-usage cmd t))
          (t
           (when (not (probe-file (first args)))
             (error "ERROR: File `~a` does not exist." (first args)))
           (convert-concordance-to-csv (first args))))))


(defun cli/command ()
  (clingon:make-command
   :name "dat2csv"
   :description "convert Concordance DAT file to CSV"
   :version "0.1.0"
   :license "All rights reserved"
   :authors '("Jin-Ho King <j@kingesq.us>")
   :usage "[OPTIONS] <DAT-FILE>"
   :options (cli/options)
   :handler #'cli/handler))


(defun main (&rest argv)
  (declare (ignorable argv))
  (clingon:run (cli/command) argv))
;;; vim: set ft=lisp lisp:
